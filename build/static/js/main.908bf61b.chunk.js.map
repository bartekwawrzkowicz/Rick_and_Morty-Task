{"version":3,"sources":["components/ScrollToTop.jsx","components/NewUIThemeButton.jsx","images/rick_and_morty_logo.png","components/Header.jsx","components/Character.jsx","components/CharactersList.jsx","App.js","index.js"],"names":["ScrollToTop","pageYOffset","useWindowScroll","y","useState","active","setActive","useEffect","className","onClick","window","scrollTo","top","behavior","newButtonTheme","createTheme","palette","primary","main","secondary","Buttons","props","ThemeProvider","theme","pagination","Button","size","variant","clickBack","disabled","pageNumber","clickNext","Header","src","Logo","alt","Character","characters","posts","length","map","character","date","Date","created","toLocaleDateString","time","toLocaleTimeString","image","name","status","species","type","gender","id","CharactersList","URL","number","App","setPosts","setPagination","totalPages","setTotalPages","counter","setCounter","dynamicURL","setDynamicURL","axios","get","then","res","data","info","pages","results","catch","err","console","error","onChange","event","value","target","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.908bf61b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/components/ScrollToTop.scss';\nimport { useWindowScroll } from 'react-use';\n\nconst ScrollToTop = () => {\n    const { y: pageYOffset } = useWindowScroll();\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        if (pageYOffset > 400) {\n            setActive(true);\n        } else {\n            setActive(false);\n        }\n    }, [pageYOffset]);\n\n    if (!active) {\n        return false;\n    }\n\n    const scrollToTop = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n\n    return (\n        <div className=\"scroll\" onClick={scrollToTop}>\n            UP<i className=\"scroll__icon\"></i>\n        </div>\n    );\n}\n\nexport default ScrollToTop;","import React from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport '../styles/components/NewUIThemeButton.scss';\n\nconst newButtonTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#322F3D',\n        },\n        secondary: {\n            main: '#59405C',\n        },\n    },\n});\n\nconst Buttons = props => {\n    return (\n        <ThemeProvider theme={newButtonTheme}>\n            {props.pagination ? (\n                <Button className=\"buttons\" size=\"large\" variant=\"contained\" onClick={props.clickBack}>back</Button>\n            ) : <Button className=\"buttons\" size=\"large\" variant=\"contained\" onClick={props.clickBack} disabled>back</Button>}\n            {props.pagination ? (\n                <span className=\"page-info\">{props.pageNumber}</span>\n            ) : null}\n            <Button className=\"buttons\" size=\"large\" variant=\"contained\" onClick={props.clickNext}>next</Button>\n        </ThemeProvider>\n    );\n}\n\nexport default Buttons;","export default __webpack_public_path__ + \"static/media/rick_and_morty_logo.b24ac2d7.png\";","import React from 'react';\n\nimport Logo from '../images/rick_and_morty_logo.png';\nimport '../styles/components/Header.scss';\n\nconst Header = () => {\n    return (\n        <>\n            <div className=\"task-list__header\">\n                <img src={Logo} alt=\"\" />\n            </div>\n        </>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nimport '../styles/components/Character.scss';\n\nconst Character = props => {\n\n    const characters = props.posts.length > 0 && props.posts.map(character => {\n\n        const date = new Date(character.created).toLocaleDateString();\n        const time = new Date(character.created).toLocaleTimeString();\n\n        return (\n            <div key={character.id} className=\"characters\">\n                <ul className=\"characters-list__items\">\n                    <li className=\"characters-list__items item\">\n                        <img className=\"characters-list__items item-image\" src={character.image} alt=\"character\" />\n                    </li>\n\n                    <li className=\"characters-list__items header\">\n                        <p className=\"characters-list__items name\">\n                            {character.name}\n                        </p>\n                        <p className=\"characters-list__items item\">\n                            status: {character.status}\n                        </p>\n                        <p className=\"characters-list__items item\">\n                            species: {character.species}\n                        </p>\n                        {character.type ?\n                            <p className=\"characters-list__items item\">\n                                {`type: ${character.type}`}</p>\n                            : null}\n                        <p className=\"characters-list__items item\">\n                            gender: {character.gender}\n                        </p>\n                        <p className=\"characters-list__items item\">\n                            created on {date}, at {time}\n                        </p>\n                    </li>\n                </ul>\n            </div >\n        )\n    }\n    );\n\n    return (\n        <div className=\"characters-list\">\n            { characters}\n        </div>\n    )\n}\n\nexport default Character;","import React from 'react';\n\nimport Character from './Character.jsx';\n\nimport '../styles/components/Character.scss';\n\nconst CharactersList = props => {\n\n    return (\n        <>\n            <h2 className=\"characters-list__header\">List of characters</h2>\n            <Character posts={props.posts} />\n        </>\n    );\n}\n\nexport default CharactersList;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport ScrollToTop from './components/ScrollToTop.jsx';\nimport Buttons from './components/NewUIThemeButton.jsx';\nimport Header from './components/Header.jsx';\nimport CharactersList from './components/CharactersList.jsx';\n\nimport './styles/components/App.scss';\n\nconst URL = 'https://rickandmortyapi.com/api/character';\nlet number = 1;\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [pagination, setPagination] = useState(false);\n  const [totalPages, setTotalPages] = useState(0)\n  const [counter, setCounter] = useState(number);\n  const [dynamicURL, setDynamicURL] = useState(URL);\n\n  useEffect(() => {\n    axios\n      .get(dynamicURL)\n      .then(res => {\n        setTotalPages(res.data.info.pages)\n        setPosts(res.data.results)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }, [dynamicURL]);\n\n  const filterCharactersHandler = event => {\n    const { value } = event.target;\n    number = 1\n    if (value === 'Male') {\n      setDynamicURL(`${URL}/?gender=male`);\n    } else if (value === 'Female') {\n      setDynamicURL(`${URL}/?gender=female`)\n    } else if (value === 'Human') {\n      setDynamicURL(`${URL}/?species=human`)\n    } else if (value === 'Alien') {\n      setDynamicURL(`${URL}/?species=alien`)\n    } else {\n      setDynamicURL(URL);\n    }\n  }\n\n  const nextButtonHandler = () => {\n    number = number + 1;\n    setCounter(counter + 1);\n    axios\n      .get(URL + `/?page=${number}`)\n      .then(res => {\n        setPosts(res.data.results)\n      });\n    setPagination(true);\n    if (number > totalPages || number === 1) {\n      number = 1;\n      setPagination(false)\n    }\n\n  };\n\n  const backButtonHandler = () => {\n    number = number - 1;\n    setCounter(counter - 1);\n    axios\n      .get(URL + `/?page=${number}`)\n      .then(res => {\n        setPosts(res.data.results)\n      });\n    if (number === 1) {\n      axios\n        .get(URL)\n        .then(res => {\n          setPosts(res.data.results)\n          setPagination(false);\n        });\n\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <label className=\"filter\">Filter characters</label>\n      <select className=\"filter__select\" onChange={filterCharactersHandler}>\n        <option value=\"full-list\" defaultValue>all</option>\n        <option value=\"Male\">Male</option>\n        <option value=\"Female\">Female</option>\n        <option value=\"Human\">Human</option>\n        <option value=\"Alien\">Alien</option>\n      </select>\n\n      <CharactersList posts={posts} />\n\n      <div className=\"button-container\">\n        <Buttons pagination={pagination} posts={posts} clickBack={backButtonHandler} clickNext={nextButtonHandler} pageNumber={number} />\n      </div>\n      <ScrollToTop />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}